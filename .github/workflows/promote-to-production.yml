#file: noinspection UndefinedAction,UndefinedParamsPresent
name: Promote Stage to Production

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_USE_OIDC: true
  TF_WORKING_DIR: ./terraform


jobs:
  terraform-outputs:
    runs-on: ubuntu-latest
    outputs:
      function_app_name: ${{ steps.get_outputs.outputs.function_app_name }}
      function_app_resource_group_name: ${{ steps.get_outputs.outputs.function_app_resource_group_name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Get Terraform outputs
      id: get_outputs
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TF_STATE_RG }}" \
          -backend-config="storage_account_name=${{ secrets.TF_STATE_SA }}" \
          -backend-config="container_name=${{ secrets.TF_STATE_CONTAINER }}" \
          -backend-config="key=${{ secrets.TF_STATE_KEY }}"

        FUNCTION_APP_NAME=$(terraform output -raw function_app_name)
        RG_NAME=$(terraform output -raw function_app_resource_group_name)

        echo "function_app_name=$FUNCTION_APP_NAME" >> $GITHUB_OUTPUT
        echo "function_app_resource_group_name=$RG_NAME" >> $GITHUB_OUTPUT

  promote-to-production:
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-outputs
    env:
      FUNCTION_APP_NAME: ${{ needs.terraform-outputs.outputs.function_app_name }}
      RG_NAME: ${{ needs.terraform-outputs.outputs.function_app_resource_group_name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ env.ARM_CLIENT_ID }}
        tenant-id: ${{ env.ARM_TENANT_ID }}
        subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

    - name: Swap deployment slots
      run: |
        echo "Swapping stage and production slots..."
        
        az functionapp deployment slot swap \
          --name "${{ env.FUNCTION_APP_NAME }}" \
          --resource-group "${{ env.RG_NAME }}" \
          --slot "stage" \
          --target-slot "production"
        
        echo "âœ… Successfully swapped stage -> production"
